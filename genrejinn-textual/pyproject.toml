[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "genrejinn"
version = "0.1.0"
description = "A terminal-based EPUB reader with multi-color highlighting and note-taking capabilities"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Blake Lawyer", email = "blake@example.com"}
]
maintainers = [
    {name = "Blake Lawyer", email = "blake@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Text Processing :: Markup :: XML",
    "Topic :: Utilities",
]
keywords = ["epub", "reader", "textual", "terminal", "highlighting", "notes"]
requires-python = ">=3.8"
dependencies = [
    "textual>=0.41.0",
    "rich>=13.0.0",
    "requests>=2.25.0",
    "tree-sitter>=0.20.0",
]

[project.optional-dependencies]
server = [
    "textual-serve>=1.0.0",
]
images = [
    "textual-image>=0.3.0",
    "textual-imageview>=0.1.0",
]
dev = [
    "textual-dev>=1.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]
all = [
    "genrejinn[server,images]",
]

[project.urls]
Homepage = "https://github.com/blakelawyer/genrejinn"
Documentation = "https://github.com/blakelawyer/genrejinn#readme"
Repository = "https://github.com/blakelawyer/genrejinn.git"
"Bug Tracker" = "https://github.com/blakelawyer/genrejinn/issues"

[project.scripts]
genrejinn = "genrejinn.main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
genrejinn = ["*.md", "*.txt"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | grammar
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

# mypy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "textual_image.*",
    "textual_imageview.*",
    "textual_serve.*",
    "tree_sitter.*",
]
ignore_missing_imports = true